{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Title/Title.module.css","Components/FeedbackOptions/FeedBackOptions.module.css","Components/Notification/Notification.module.css","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","Components/Title/Title.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","index","className","styles","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","textObj","goodContent","neutralContent","badContent","totalContent","positivePercentageContent","statistics","stat__text","stat__value","defaultProps","Notification","message","notification","text","grandTitleTxt","titleTxt","Title","useState","counterGood","setCounterGood","counterNeutral","setCounterNeutral","counterBad","setCounterBad","countTotalFeedback","section","title","title2","e","target","prevCounterGood","prevCounterNeutral","prevCounterBad","console","warn","Math","ceil","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59e2a3e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1cEjk\",\"stat__text\":\"Statistics_stat__text__2kexp\",\"stat__value\":\"Statistics_stat__value__3FlcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Title_section__F6QlA\",\"title\":\"Title_title__2Fv_Y\",\"title2\":\"Title_title2__11Mhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedBackOptions_buttons__10Aqi\",\"button\":\"FeedBackOptions_button__3VNuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2DELX\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedBackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => (\r\n        <button\r\n          key={index}\r\n          className={styles.button}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func,\r\n  options: PropTypes.array,\r\n};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  textObj: {\r\n    goodContent,\r\n    neutralContent,\r\n    badContent,\r\n    totalContent,\r\n    positivePercentageContent,\r\n  },\r\n}) {\r\n  const { statistics, stat__text, stat__value } = styles;\r\n  return (\r\n    <div className={statistics}>\r\n      <p className={stat__text}>\r\n        {goodContent}\r\n        <span className={stat__value}>{good}</span>\r\n      </p>\r\n      <p className={stat__text}>\r\n        {neutralContent}\r\n        <span className={stat__value}>{neutral}</span>\r\n      </p>\r\n      <p className={stat__text}>\r\n        {badContent}\r\n        <span className={stat__value}>{bad}</span>\r\n      </p>\r\n      <p className={stat__text}>\r\n        {totalContent}\r\n        <span className={stat__value}>{total}</span>\r\n      </p>\r\n      <p className={stat__text}>\r\n        {positivePercentageContent}\r\n        <span className={stat__value}>{positivePercentage}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  textObj: {\r\n    goodContent: \"Good:\",\r\n    neutralContent: \"Neutral:\",\r\n    badContent: \"Bad:\",\r\n    totalContent: \"Total:\",\r\n    positivePercentageContent: \"Positive feedback:\",\r\n  },\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.string,\r\n};","import PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <div className={styles.notification}>{message}</div>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};","import { useState } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport styles from \"./Title.module.css\";\r\n\r\nconst text = {\r\n  grandTitleTxt: \"Please leave feedback\",\r\n  titleTxt: \"Statistics\",\r\n  goodContent: \"Good:\",\r\n  neutralContent: \"Neutral:\",\r\n  badContent: \"Bad:\",\r\n  totalContent: \"Total:\",\r\n  positivePercentageContent: \"Positive feedback:\",\r\n};\r\n\r\nconst options = [\"good\", \"neutral\", \"bad\"];\r\n\r\nexport default function Title() {\r\n  const [counterGood, setCounterGood] = useState(0);\r\n  const [counterNeutral, setCounterNeutral] = useState(0);\r\n  const [counterBad, setCounterBad] = useState(0);\r\n\r\n  const onLeaveFeedback = (e) => {\r\n    const { name } = e.target;\r\n    switch (name) {\r\n      case \"good\":\r\n        setCounterGood((prevCounterGood) => prevCounterGood + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setCounterNeutral((prevCounterNeutral) => prevCounterNeutral + 1);\r\n        break;\r\n      case \"bad\":\r\n        setCounterBad((prevCounterBad) => prevCounterBad + 1);\r\n        break;\r\n      default:\r\n        console.warn(`Butoon - ${name} is under constraction`);\r\n    }\r\n  };\r\n  const countTotalFeedback = () => {\r\n    return counterGood + counterNeutral + counterBad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return counterGood\r\n      ? Math.ceil((counterGood / countTotalFeedback()) * 100) + \"%\"\r\n      : 0 + \"%\";\r\n  };\r\n\r\n  const { section, title, title2 } = styles;\r\n  const { grandTitleTxt, titleTxt } = text;\r\n  return (\r\n    <section className={section}>\r\n      <h1 className={title}>{grandTitleTxt}</h1>\r\n      <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\r\n      <h2 className={title2}>{titleTxt}</h2>\r\n      {counterGood || counterNeutral || counterBad ? (\r\n        <Statistics\r\n          good={counterGood}\r\n          neutral={counterNeutral}\r\n          bad={counterBad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={countPositiveFeedbackPercentage()}\r\n          textObj={text}\r\n        />\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </section>\r\n  );\r\n}","import \"./index.css\";\nimport Title from \"./Components/Title\";\n\nexport default function App() {\n  return <Title />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}